<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:p="http://www.springframework.org/schema/p"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"

             xsi:schemaLocation="http://www.springframework.org/schema/beans 
                                 http://www.springframework.org/schema/beans/spring-beans.xsd
                                 http://www.springframework.org/schema/security
                                 http://www.springframework.org/schema/security/spring-security.xsd">
    
    <beans:bean id="daoAuthenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <beans:property name="userDetailsService" ref="accountDetailsService" />
    </beans:bean>

    <beans:bean id="authenticationManager" class="org.springframework.security.authentication.ProviderManager">
        <beans:property name="providers">
            <beans:list>
                <beans:ref local="daoAuthenticationProvider" />
            </beans:list>
        </beans:property>
    </beans:bean> 
    
    <beans:bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder" />
    <beans:bean id="saltSource" class="org.springframework.security.authentication.dao.ReflectionSaltSource" p:userPropertyToUse="id" />
    
    <http pattern="/rest/**" use-expressions="true" create-session="stateless">
        <intercept-url pattern="/**"  access="hasRole('ROLE_REST')"/>
        <http-basic/>
    </http>
    
    <http auto-config="true" use-expressions="true">
        <intercept-url pattern="/test" access="hasRole('ROLE_ADMIN')" />
        <intercept-url pattern="/customer/*" access="hasRole('ROLE_ADMIN')" />
        <intercept-url pattern="/customer/add/*" access="hasRole('ROLE_ADMIN')" />
        <intercept-url pattern="/customer/edit/*" access="hasRole('ROLE_ADMIN')" />
        <intercept-url pattern="/customer/delete/*" access="hasRole('ROLE_ADMIN')" />
        <intercept-url pattern="/vacation/*" access="hasRole('ROLE_ADMIN')" />
        <intercept-url pattern="/vacation/add/*" access="hasRole('ROLE_ADMIN')" />
        <intercept-url pattern="/vacation/edit/*" access="hasRole('ROLE_ADMIN')" />
        <intercept-url pattern="/vacation/delete/*" access="hasRole('ROLE_ADMIN')" />
        <intercept-url pattern="/tour/*" access="hasRole('ROLE_ADMIN')" />
        <intercept-url pattern="/tour/add/*" access="hasRole('ROLE_ADMIN')" />
        <intercept-url pattern="/tour/edit/*" access="hasRole('ROLE_ADMIN')" />
        <intercept-url pattern="/tour/delete/*" access="hasRole('ROLE_ADMIN')" />
        <intercept-url pattern="/order/*" access="hasAnyRole('ROLE_ADMIN', 'ROLE_CUSTOMER')" />
        <intercept-url pattern="/order/vacation/**" access="hasAnyRole('ROLE_ADMIN', 'ROLE_CUSTOMER')" />
        <intercept-url pattern="/order/get/*" access="hasRole('ROLE_ADMIN')" />
        <intercept-url pattern="/order/edit/*" access="hasRole('ROLE_ADMIN')" />
        <intercept-url pattern="/order/delete/*" access="hasRole('ROLE_ADMIN')" />
        <form-login login-page="/login" authentication-failure-url="/login/error" default-target-url="/" />
        <logout invalidate-session="true" logout-url="/logout" logout-success-url="/" />
    </http>
    
    
    <authentication-manager>
        <authentication-provider>
		<user-service>
			<user name="rest" password="rest" authorities="ROLE_REST" />
		</user-service>
	  </authentication-provider>
        <authentication-provider user-service-ref="accountDetailsService">
            <password-encoder ref="passwordEncoder">
                <salt-source ref="saltSource" />
            </password-encoder>
        </authentication-provider>
    </authentication-manager>
   

</beans:beans>
